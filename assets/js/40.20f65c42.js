(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{483:function(t,a,s){t.exports=s.p+"assets/img/http-cache-decision-tree.4b666fa3.png"},484:function(t,a,s){t.exports=s.p+"assets/img/d44cc893bdfd9e4e9fbaf5104bb35b34.d44cc893.png"},485:function(t,a,s){t.exports=s.p+"assets/img/ab3cbacc6158d722853d139b940835c1.ab3cbacc.png"},486:function(t,a,s){t.exports=s.p+"assets/img/0889d69189e0c1719f6141123726881f.0889d691.png"},739:function(t,a,s){"use strict";s.r(a);var r=s(14),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),a("p",[t._v("大致上拆成两块：")]),t._v(" "),a("ul",[a("li",[t._v("网络")]),t._v(" "),a("li",[t._v("页面代码")])]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developers.google.com/speed/docs/insights/rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("PageSpeed Insights"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),a("p",[t._v("常见的有")]),t._v(" "),a("ul",[a("li",[t._v("减少重定向")]),t._v(" "),a("li",[t._v("资源加载")]),t._v(" "),a("li",[t._v("压缩")]),t._v(" "),a("li",[t._v("缓存")])]),t._v(" "),a("h2",{attrs:{id:"重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[t._v("#")]),t._v(" 重定向")]),t._v(" "),a("p",[t._v("重定向会触发额外的 HTTP 请求，无法避免的情况下只要一次重定向"),a("br"),t._v("\n比如百度首页是响应式的，PC/移动域名一样"),a("br"),t._v("\n而哔哩哔哩移动端是 bilibili.com → m.bilibili.com")]),t._v(" "),a("h2",{attrs:{id:"资源加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源加载"}},[t._v("#")]),t._v(" 资源加载")]),t._v(" "),a("p",[t._v("比如")]),t._v(" "),a("ul",[a("li",[t._v("css：放头部，使 CSS 样式表尽早加载，减少@import 的使用，因为需要解析完样式表中所有 import 的资源才会算 CSS 资源下载完"),a("br"),t._v("\n而 CSS 是会阻塞浏览器渲染的，因为 Render Tree 依赖 DOM 和 CSSOM，见"),a("a",{attrs:{href:"#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B"}},[t._v("浏览器加载过程")]),a("br"),t._v("\n如果 CSS 很小，可以考虑写成内联")]),t._v(" "),a("li",[t._v("JS：尽可能用 defer/async 进行异步")]),t._v(" "),a("li",[t._v("控制单个资源的文件大小(最好小于 14.6kb)")])]),t._v(" "),a("h3",{attrs:{id:"不同域名加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同域名加载"}},[t._v("#")]),t._v(" 不同域名加载")]),t._v(" "),a("p",[t._v("除了 CDN 可以提供最近的资源外，优点还有：")]),t._v(" "),a("ul",[a("li",[t._v("突破浏览器并发限制。\n同一时间针对同一域名下的请求有一定数量限制，超过限制数目的请求会被阻塞。大多数浏览器的并发数量都控制在 6 以内。有些资源的请求时间很长，因而会阻塞其他资源的请求")]),t._v(" "),a("li",[t._v("跨域不会携带 cookie，节省了带宽")])]),t._v(" "),a("h3",{attrs:{id:"资源预加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源预加载"}},[t._v("#")]),t._v(" 资源预加载")]),t._v(" "),a("p",[t._v("参考"),a("a",{attrs:{href:"https://bubkoo.com/2015/11/19/prefetching-preloading-prebrowsing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化 - 资源预加载"),a("OutboundLink")],1),a("br"),t._v("\n预加载表示浏览器在后台（空闲时）获取将来可能用得到的资源，并且将他们存储在浏览器的缓存中"),a("br"),t._v("\n意味着消耗硬件性能，需要取舍")]),t._v(" "),a("ul",[a("li",[t._v("DNS 预解析: DNS-Prefetch\n"),a("code",[t._v('<link rel="dns-prefetch" href="//example.com">')]),a("br"),t._v("\n通过 DNS 预解析来告诉浏览器未来我们可能从某个特定的 URL 获取资源，当浏览器真正使用到该域中的某个资源时就可以尽快地完成 DNS 解析。"),a("br"),t._v("\n也就是从这个 URL 请求一个资源时，DNS 解析已经完成了")]),t._v(" "),a("li",[t._v("预连接 Preconnect: "),a("code",[t._v('<link rel="preconnect" href="http://example.com">')]),a("br"),t._v("\n与 DNS 预解析类似，preconnect 不仅完成 DNS 预解析，同时还将进行 TCP 握手和建立传输层协议")]),t._v(" "),a("li",[t._v("预获取 Prefetching: "),a("code",[t._v('<link rel="prefetch" href="image.png">')]),a("br"),t._v("\n预获取是真正请求并下载了资源，并储存在缓存中")])]),t._v(" "),a("h3",{attrs:{id:"懒加载-按需加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#懒加载-按需加载"}},[t._v("#")]),t._v(" 懒加载/按需加载")]),t._v(" "),a("p",[t._v("比如图片"),a("br"),t._v("\n监听滚动条，用 data-src 指定 img 的路径，滚动到一定位置的时候替换成 src")]),t._v(" "),a("h2",{attrs:{id:"压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压缩"}},[t._v("#")]),t._v(" 压缩")]),t._v(" "),a("p",[t._v("任何压缩的都需要更多硬件功能消耗，自行取舍")]),t._v(" "),a("ul",[a("li",[t._v("减少 HTTP 请求，将代码压缩合并")]),t._v(" "),a("li",[t._v("压缩代码"),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v('去掉属性名的引号，比如{"foo": "123"}改为{foo: "123"}，方便压缩工具压缩变量')])])]),t._v(" "),a("li",[t._v("使用 Gzip 编码，服务器端压缩文件。 Nginx：使用 "),a("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_gzip_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ngx_http_gzip_module"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("图片优化")])]),t._v(" "),a("h3",{attrs:{id:"图片优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片优化"}},[t._v("#")]),t._v(" 图片优化")]),t._v(" "),a("ul",[a("li",[t._v("首选矢量图：不会失真，SVG 与 PNG 和 JPG 相比，文件体积更小，可压缩性更强"),a("br"),t._v("\n缺点是渲染成本比较高")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("srcset")]),t._v("属性，比如在 2x 显示屏上使用 2x 图像。")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("photo.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("srcset")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("photo@2x.png 2x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("photo.png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("尽可能用 CSS 实现")])]),t._v(" "),a("li",[a("p",[t._v("不考虑兼容的情况下可以用 WebP，还支持动图。"),a("br"),t._v("\n可以用 JS 先判断浏览器类型，再生成图片的 src"),a("br"),t._v("\n或者根据 HTTP Header，让服务器根据"),a("code",[t._v("Accept")]),t._v("字段返回对应的文件类型")])]),t._v(" "),a("li",[a("p",[t._v("其次图片格式优先 JPEG（如果原图相对高清，可以压缩到 85%）。"),a("a",{attrs:{href:"https://tinypng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("图片压缩工具"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("如果一定要保留高精度和细节或者透明度，用 PNG"),a("br"),t._v("\nPNG 有 PNG-8 和 PNG-24，8 位的 PNG 最多支持 256 种颜色，而 24 位的可以呈现约 1600 万种颜色。\n当然优先 PNG-8")])]),t._v(" "),a("li",[a("p",[t._v("不是动图的情况下不要用 GIF")])]),t._v(" "),a("li",[a("p",[t._v("雪碧图(CSS Sprites)，webpack 也可以配置，或者使用网站"),a("a",{attrs:{href:"https://www.toptal.com/developers/css/sprite-generator",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线生成"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("Base64: 用字符串代替图片，那么就不会发送 HTTP 请求"),a("br"),t._v("\n缺点是标签字符串会很长，高清文件就不适合编码成 Base64"),a("br"),t._v("\nwebpack 的 url-loader 可以配置图片编码"),a("br"),t._v("\n一般 10kb 以下大小可以用 Base64")])]),t._v(" "),a("li",[a("p",[t._v("存在在 oss 服务器上的图片可以在图片后面加 w,h 直接在获取图片时就限制大小，减少了图片大小也减少了浏览器把图片放大缩小的操作")])])]),t._v(" "),a("h3",{attrs:{id:"webpack-打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包优化"}},[t._v("#")]),t._v(" webpack 打包优化")]),t._v(" "),a("p",[t._v("见"),a("RouterLink",{attrs:{to:"/webpack/07_optimization.html"}},[t._v("优化：optimization")]),t._v("或者官网"),a("a",{attrs:{href:"https://webpack.js.org/guides/build-performance/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Build Performance"),a("OutboundLink")],1),a("br"),t._v("\n常用的有")],1),t._v(" "),a("ul",[a("li",[t._v("tree shaking")]),t._v(" "),a("li",[t._v("dllplugin")]),t._v(" "),a("li",[t._v("happypack")])]),t._v(" "),a("h3",{attrs:{id:"gzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gzip"}},[t._v("#")]),t._v(" Gzip")]),t._v(" "),a("p",[t._v("参考"),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/37429159",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化-gzip 压缩"),a("OutboundLink")],1),a("br"),t._v("\n需要注意的是 Gzip 并不保证针对每一个文件的压缩都会使其变小"),a("br"),t._v("\nGzip 本质上是在一个文本文件中找出一些重复出现的字符串、临时替换它们，从而使整个文件变小"),a("br"),t._v("\n文件中代码的重复率越高，那么压缩的效率就越高，使用 Gzip 的收益也就越大")]),t._v(" "),a("ul",[a("li",[t._v("Gzip 对于文本文件（js、css、ttf...）收益会比较大")]),t._v(" "),a("li",[t._v("对于多媒体文件则没有必要采用 Gzip，因为多数多媒体文件本身就是采用了有损压缩。对有损压缩的文件再进行 Gzip 意义不大")])]),t._v(" "),a("p",[t._v("扩展阅读：哈夫曼编码")]),t._v(" "),a("h2",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),a("p",[t._v("详细内容见"),a("RouterLink",{attrs:{to:"/network/40_cache.html"}},[t._v("浏览器缓存")])],1),t._v(" "),a("ul",[a("li",[t._v("缓存：使用"),a("code",[t._v("Cache-Control")]),t._v("和"),a("code",[t._v("Etag")]),t._v("，抽取频繁更新的资源，那么只需要更新这些，其余缓存失效时间可以变长"),a("br"),t._v(" "),a("img",{attrs:{src:s(483),alt:"cache"}})]),t._v(" "),a("li",[t._v("CDN")])]),t._v(" "),a("h3",{attrs:{id:"http-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[t._v("#")]),t._v(" HTTP/2")]),t._v(" "),a("p",[t._v("由于"),a("RouterLink",{attrs:{to:"/http/08_http_2.html"}},[t._v("HTTP2")]),t._v("的优势，以下方案可以弃用"),a("br"),t._v("\n合并文件、内联资源、雪碧图、域名分片对于 HTTP/2 来说是不必要的，使用 HTTP/2 尽可能将资源细粒化，文件分解地尽可能散，不用担心请求数多")],1),t._v(" "),a("h2",{attrs:{id:"js-代码可维护性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-代码可维护性"}},[t._v("#")]),t._v(" JS 代码可维护性")]),t._v(" "),a("h3",{attrs:{id:"可读性-加注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可读性-加注释"}},[t._v("#")]),t._v(" 可读性：加注释")]),t._v(" "),a("h3",{attrs:{id:"命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名"}},[t._v("#")]),t._v(" 命名")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("变量都是名词，比如 name,")])]),t._v(" "),a("li",[a("p",[t._v("函数名都是动词, 比如 getName。如果返回的是布尔，用 is 开头")])])]),t._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("初始化就确定要数据类型，尽可能避免变量的数据类型改变"),a("br"),t._v("\n尽可能使用轻量级的 JSON 数据")]),t._v(" "),a("h3",{attrs:{id:"松散耦合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#松散耦合"}},[t._v("#")]),t._v(" 松散耦合")]),t._v(" "),a("p",[t._v("抽取方法")]),t._v(" "),a("p",[t._v("比如监听事件和根据事件内参数进行不同的处理函数，把事件监听和处理函数拆开")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("避免传递 event 对象，只传递 event 内需要的值")])]),t._v(" "),a("h3",{attrs:{id:"避免创建多个全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免创建多个全局变量"}},[t._v("#")]),t._v(" 避免创建多个全局变量")]),t._v(" "),a("p",[t._v("把变量封装在对象内")]),t._v(" "),a("p",[t._v("比如")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用到了全局变量name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改为")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nameObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"避免和-null-比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免和-null-比较"}},[t._v("#")]),t._v(" 避免和 null 比较")]),t._v(" "),a("p",[t._v("如果需要的值是一个引用类型，用 instanceof；基本类型，用 typeof")]),t._v(" "),a("h3",{attrs:{id:"使用常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用常量"}},[t._v("#")]),t._v(" 使用常量")]),t._v(" "),a("p",[t._v("常量一般都大写")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Constants "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INVALID_MESSAGE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("适用场景")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("重复出现")])]),t._v(" "),a("li",[a("p",[t._v("显示给用户的值，方便国际化")])])]),t._v(" "),a("h2",{attrs:{id:"js-性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-性能"}},[t._v("#")]),t._v(" JS 性能")]),t._v(" "),a("p",[t._v("尽可能使用局部变量")]),t._v(" "),a("p",[t._v("减少嵌套（对象/函数嵌套）")]),t._v(" "),a("p",[t._v("少操作 DOM")]),t._v(" "),a("p",[t._v("合理的 for 循环")]),t._v(" "),a("p",[t._v("待整理："),a("a",{attrs:{href:"https://juejin.im/post/5a102e656fb9a044fd1158c6",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 如何工作：在 V8 引擎里 5 个优化代码的技巧"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"o-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#o-1"}},[t._v("#")]),t._v(" O(1)")]),t._v(" "),a("p",[t._v("寻找常量是最快的，将常量放在数组里面访问也一样")]),t._v(" "),a("p",[t._v("用局部对象存全局，用常量存对象")]),t._v(" "),a("h3",{attrs:{id:"最小化语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小化语句"}},[t._v("#")]),t._v(" 最小化语句")]),t._v(" "),a("p",[t._v("单条语句多个操作快，避免多个语句，每个语句只有一个操作。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"迭代值-自增、自减"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代值-自增、自减"}},[t._v("#")]),t._v(" 迭代值（自增、自减）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ni"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"用数组和对象字面量代替构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用数组和对象字面量代替构造函数"}},[t._v("#")]),t._v(" 用数组和对象字面量代替构造函数")]),t._v(" "),a("h3",{attrs:{id:"节流与防抖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流与防抖"}},[t._v("#")]),t._v(" 节流与防抖")]),t._v(" "),a("p",[t._v("见"),a("RouterLink",{attrs:{to:"/javascript/053_dom.html#函数防抖与节流"}},[t._v("函数防抖与节流")])],1),t._v(" "),a("h2",{attrs:{id:"浏览器加载过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器加载过程"}},[t._v("#")]),t._v(" 浏览器加载过程")]),t._v(" "),a("p",[t._v("渲染由排版引擎（layout engine）执行")]),t._v(" "),a("ol",[a("li",[t._v("解析文件并构建对象模型")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浏览器加载网站时，接受到一个 HTML 文件，会先把 HTML 文件解析成一个树，也就是 DOM（document\nobject model）；")])]),t._v(" "),a("li",[a("p",[t._v("当遇到指向 CSS 文件时（不论是 style 还是外部 link），会转成 CSSOM（CSS object\nmodel, CSS 对象模型）"),a("br"),t._v("\n解析的顺序是"),a("code",[t._v("浏览器的样式 -> 用户自定义的样式 -> link标签等引进来的样式 -> style标签的内联样式")])])])]),t._v(" "),a("p",[t._v("每个 CSS 选择符都会匹配一个 DOM 节点")]),t._v(" "),a("p",[a("img",{attrs:{src:s(484),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(485),alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("渲染树(render tree)")])]),t._v(" "),a("p",[t._v("构建另外一个树结构，每个节点表示渲染到屏幕上的信息。")]),t._v(" "),a("p",[t._v("类似 DOM，但是不包含隐藏元素，有没有"),a("code",[t._v("<head>")]),t._v("标签内的内容；会保存伪类，还有其他表现性信息，比如滚动条。")]),t._v(" "),a("p",[t._v("也就是渲染树内每个节点都知道了自己的颜色、字体等等")]),t._v(" "),a("p",[a("img",{attrs:{src:s(486),alt:""}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("layout/reflow")])]),t._v(" "),a("p",[t._v("计算每个对象的几何信息，确定每个对象显示在浏览器上的位置")]),t._v(" "),a("p",[t._v("元素的几何属性（比如宽、高）会触发 reloflow")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("绘制(paiting)，合成(compositing), 呈现(drawing)")])]),t._v(" "),a("p",[t._v("确定每个对象的位置和属性后，可以得到显示在屏幕的实际像素，这个过程是绘制。")]),t._v(" "),a("p",[t._v("如果最终某个部分不会影响页面的其他内容，浏览器会把绘制拆成不同的任务，每个任务负责不同的部分（layer）")]),t._v(" "),a("p",[t._v("有些复杂元素（比如三维变换），需要经过 GPU 进行硬件加速。有些用了滤镜，需要和其他层混合。也就是拆分和混合的过程为合成")]),t._v(" "),a("p",[t._v("最后可以进行呈现了")]),t._v(" "),a("h3",{attrs:{id:"重绘-repaint-和回流-reflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘-repaint-和回流-reflow"}},[t._v("#")]),t._v(" 重绘（Repaint）和回流（Reflow）")]),t._v(" "),a("p",[t._v("重绘：当页面中元素样式的改变并不影响它在文档流中的位置时（例如：color、background-color、visibility 等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。")]),t._v(" "),a("p",[t._v("回流/重排发生的情况：页面布局或者集合属性改变")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("可见元素的删除或增加")])]),t._v(" "),a("li",[a("p",[t._v("元素位置改变")])]),t._v(" "),a("li",[a("p",[t._v("元素尺寸改变（包括 padding、margin、border，宽高等）")])]),t._v(" "),a("li",[a("p",[t._v("内容改变（比如文本改变，图片 src 改变）")])]),t._v(" "),a("li",[a("p",[t._v("获取布局信息（offsetTop, offsetLeft, offsetWidth,\noffsetHeight，还有 scroll 相关，client 相关，getComputeStyle）需要返回最新的布局信息，因为浏览器会触发 reflow")])]),t._v(" "),a("li",[a("p",[t._v("浏览器本身的尺寸改变")])])]),t._v(" "),a("p",[t._v("回流要比重绘消耗性能开支更大。")]),t._v(" "),a("p",[t._v("回流必将引起重绘，重绘不一定会引起回流")]),t._v(" "),a("h3",{attrs:{id:"dom-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-操作"}},[t._v("#")]),t._v(" DOM 操作")]),t._v(" "),a("ul",[a("li",[t._v("批量修改 DOM")])]),t._v(" "),a("p",[t._v("让元素脱离文档流，进行操作，最后带回文档中"),a("br"),t._v("\n脱离文档流 reflow 一次，待会文档中 reflow 一次")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("常用方式：")]),t._v(" "),a("ul",[a("li",[t._v("隐藏 → 修改 → 显示")]),t._v(" "),a("li",[t._v("推荐：使用文档片段（document fragment），在当前 DOM 之外创建一个子树，最后拷贝回文档")]),t._v(" "),a("li",[t._v("对原始元素拷贝到脱离文档的一个节点，修改后替换原始的元素"),a("br"),t._v("\ncloneNode(true)+replaceChild")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("事件委托，比如很多 li 绑定 click，委托给父元素 ul")])]),t._v(" "),a("li",[a("p",[t._v("BOM")]),t._v(" "),a("p",[t._v("对于布局信息（scroll, client, offset）可以事先赋值给局部变量。在布局确定，不会修改之后，再去访问")])])]),t._v(" "),a("h2",{attrs:{id:"css-优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-优化"}},[t._v("#")]),t._v(" CSS 优化")]),t._v(" "),a("p",[t._v("更多规范可以看"),a("a",{attrs:{href:"https://github.com/mdo/code-guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("mdo/code-guide"),a("OutboundLink")],1),a("br"),t._v("\nCSS 属性影响的过程可参考"),a("a",{attrs:{href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("csstriggers"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("也可以通过 Chrome 的 Performance")]),t._v(" "),a("ul",[a("li",[t._v(":hover")])]),t._v(" "),a("p",[t._v("避免使用大量的 hover 伪类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("减少选择器的层级嵌套（控制到三层以内）"),a("br"),t._v("\nCSS 引擎查找样式表，对每条规则都按"),a("strong",[t._v("从右到左")]),t._v("的顺序去匹配")])]),t._v(" "),a("li",[a("p",[t._v("避免使用通配符"),a("code",[t._v("*")]),t._v("，只对需要用到的元素进行选择。")])]),t._v(" "),a("li",[a("p",[t._v("关注可以通过继承实现的属性，避免重复匹配重复定义。")])]),t._v(" "),a("li",[a("p",[t._v("少用标签选择器。如果可以，用类选择器替代")])])]),t._v(" "),a("h3",{attrs:{id:"开启硬件加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启硬件加速"}},[t._v("#")]),t._v(" 开启硬件加速")]),t._v(" "),a("p",[t._v("用 css 开启硬件加速，使 GPU (Graphics Processing Unit) 发挥功能。")]),t._v(" "),a("p",[t._v("但是使用 GPU 可能会导致严重的性能问题，因为它增加了内存的使用，而且它会减少移动端设备的电池寿命。需要权衡")]),t._v(" "),a("p",[t._v("CSS animations, transforms 以及 transitions\n不会自动开启 GPU 加速，而是由浏览器的渲染引擎来执行。可以通过某些规则来触发 GPU 渲染")]),t._v(" "),a("p",[t._v("比如 3D 变换")]),t._v(" "),a("p",[t._v("哪怕不需要变换，也可以，比如 transform: translateZ(0)")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".example")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotate3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      250px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      -120deg\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale3d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在 Chrome and Safari 中，当我们使用 CSS transforms 或者\nanimations 时可能会有页面闪烁的效果，下面的代码可以修复此情况")]),t._v(" "),a("p",[t._v("backface-visibility: 定义当元素不面向屏幕时是否可见")]),t._v(" "),a("p",[t._v("perspective：元素距离视图的距离")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".example")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("backface-visibility")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("perspective")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Other transform properties here */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"性能监测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能监测"}},[t._v("#")]),t._v(" 性能监测")]),t._v(" "),a("p",[t._v("Chrome 开发者工具可以用"),a("code",[t._v("Performance")]),t._v("和 "),a("code",[t._v("LightHouse")]),a("br"),t._v("\n或者 npm 上安装"),a("a",{attrs:{href:"https://www.npmjs.com/package/lighthouse",target:"_blank",rel:"noopener noreferrer"}},[t._v("LightHouse"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" lighthouse\nlighthouse https://www.baidu.com\n")])])]),a("h3",{attrs:{id:"performance-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-api"}},[t._v("#")]),t._v(" Performance API")]),t._v(" "),a("p",[a("code",[t._v("window.performance")]),a("br"),t._v("\n参考"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Performance",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("performance.now()：相对时间，距离打开页面的时间")]),t._v(" "),a("li",[t._v("performance.timeOrigin：打开页面的时间")])]),t._v(" "),a("h3",{attrs:{id:"常见指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见指标"}},[t._v("#")]),t._v(" 常见指标")]),t._v(" "),a("ul",[a("li",[t._v("FP："),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/First_paint",target:"_blank",rel:"noopener noreferrer"}},[t._v("First paint"),a("OutboundLink")],1),t._v("：渲染出第一个像素点。FP 一般在 HTML 解析完成或者解析一部分时候触发。")]),t._v(" "),a("li",[t._v("FCP："),a("a",{attrs:{href:"https://web.dev/i18n/zh/fcp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("First contentful paint"),a("OutboundLink")],1),t._v('：首次内容绘制。从开始加载到页面内容的任何部分在屏幕上完成渲染的时间。对于该指标，"内容"指的是文本、图像（包括背景图像）、'),a("code",[t._v("<svg>")]),t._v(" 元素或非白色的 "),a("code",[t._v("<canvas>")]),t._v(" 元素。")]),t._v(" "),a("li",[t._v("LCP："),a("a",{attrs:{href:"https://web.dev/lcp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LargestContentfulPaint"),a("OutboundLink")],1),t._v("：最大内容绘制。"),a("strong",[t._v("首次")]),t._v("开始加载可视区域内可见的最大图像或文本块完成渲染的相对时间")])])])}),[],!1,null,null,null);a.default=e.exports}}]);