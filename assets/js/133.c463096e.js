(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{618:function(t,v,_){"use strict";_.r(v);var r=_(14),a=Object(r.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"享元模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#享元模式"}},[t._v("#")]),t._v(" 享元模式")]),t._v(" "),v("p",[t._v("Flyweight pattern："),v("code",[t._v("fly")]),t._v(" 这里指苍蝇，意为蝇量级"),v("br"),t._v("\n主要目的是为了减少对象的数量，以减少内存占用，提高性能")]),t._v(" "),v("p",[t._v("例：淘宝卖家秀拍照，需要模特和衣服，衣服有很多，模特可以只有男女各一个")]),t._v(" "),v("h2",{attrs:{id:"区分状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#区分状态"}},[t._v("#")]),t._v(" 区分状态")]),t._v(" "),v("p",[t._v("享元模式要求把对象的属性划分为内部状态和外部状态。外部和内部的划分一般可以有以下场景")]),t._v(" "),v("ul",[v("li",[t._v("内部状态存储于对象内部，可以被一些对象共享，独立于场景，一般不会改变")]),t._v(" "),v("li",[t._v("外部状态取决于具体的场景，随场景的变化而变化，不能共享")])]),t._v(" "),v("p",[t._v("把所有内部状态相同的对象都指定为同一个共享的对象。\n外部状态的被剥离，在必要的时候传入共享对象，组合成一个完整的对象")]),t._v(" "),v("p",[t._v("尽管传入外部状态需要一些时间，但可以减少完整对象的数量"),v("br"),t._v("\n实际上是用时间换空间的优化模式")]),t._v(" "),v("p",[t._v("上述卖家秀的模特性别是一个内部状态，衣服是外部状态。模特穿上衣服拍照变成一个完整内容")])])}),[],!1,null,null,null);v.default=a.exports}}]);