(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{832:function(t,s,a){"use strict";a.r(s);var e=a(14),o=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"实现思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现思路"}},[t._v("#")]),t._v(" 实现思路")]),t._v(" "),s("p",[t._v("www.test.com 跳转到 www.test.com/#hash")]),t._v(" "),s("ul",[s("li",[t._v("如果是浏览器历史跳转或者点击跳转，触发 "),s("code",[t._v("hashchange")]),t._v(" 事件")]),t._v(" "),s("li",[t._v("如果是手动刷新，不会触发 hashchange，可以触发 load。")])]),t._v(" "),s("p",[t._v("上述事件触发以后匹配到对应的路由规则，跳转到 hash 页面，替换 DOM 内容。")]),t._v(" "),s("p",[t._v("www.test.com 跳转到 www.test.com/history")]),t._v(" "),s("ul",[s("li",[t._v("如果是浏览器动作，比如 go(-1)，触发 popstate 事件")]),t._v(" "),s("li",[t._v("如果是点击跳转，调用 pushState 函数，但不会向服务器请求")]),t._v(" "),s("li",[t._v("如果是刷新页面或者输入 url，会向服务器请求，用 history 需要后端配合重定向")])]),t._v(" "),s("p",[t._v("上述处理以后跳转到 history 页面，替换 DOM 内容。")])])}),[],!1,null,null,null);s.default=o.exports}}]);