(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{731:function(t,e,v){"use strict";v.r(e);var _=v(14),s=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"rest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rest"}},[t._v("#")]),t._v(" REST")]),t._v(" "),e("p",[t._v("Representational State Transfer: 表现层状态转换")]),t._v(" "),e("p",[t._v("一种约定，不是标准")]),t._v(" "),e("p",[t._v("如果一个架构符合 REST 原则，就称它为 RESTful 架构")]),t._v(" "),e("p",[t._v('表单层："资源"是一种信息实体，它可以有多种外在表现形式。我们把"资源"具体呈现出来的形式，叫做它的"表现层"')]),t._v(" "),e("p",[t._v("比如图片可以用 JPG 格式表现，也可以用 PNG 格式")]),t._v(" "),e("p",[t._v("HTTP 请求的头信息中的 Accept 和 Content-Type 字段是对“表现层”的描述。")]),t._v(" "),e("p",[t._v("HTTP 是一个无状态协议，状态都存在服务端")]),t._v(" "),e("p",[t._v("想要服务端发生状态转换，就需要建立在表现层上")]),t._v(" "),e("h2",{attrs:{id:"restful"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restful"}},[t._v("#")]),t._v(" RESTful")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("每一个 URI 代表一种资源；")])]),t._v(" "),e("li",[e("p",[t._v("客户端和服务器之间，传递这种资源的某种表现层；")])]),t._v(" "),e("li",[e("p",[t._v('客户端通过四个 HTTP 动词（get, post, put,\ndelete），对服务器端资源进行操作，实现"表现层状态转化"。')])])]),t._v(" "),e("p",[t._v("URI 应该使用名词，不是 getSth.而是 sth.")]),t._v(" "),e("p",[t._v("在 HTTP 里面使用动词，明确 get，post，put，delete 的作用，不要混着用")]),t._v(" "),e("p",[t._v("使用正确的状态码。")]),t._v(" "),e("p",[t._v("也就是每次访问同一个接口，只要明确请求方法，就知道要做什么，不需要 URI 指明")])])}),[],!1,null,null,null);e.default=s.exports}}]);