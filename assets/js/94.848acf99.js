(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{488:function(t,s,a){t.exports=a.p+"assets/img/commonjs.af51ea82.jpg"},745:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),s("p",[s("img",{attrs:{src:a(488),alt:"NodeJS 与 CommonJS 关系"}})]),t._v(" "),s("h2",{attrs:{id:"commonjs-规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范"}},[t._v("#")]),t._v(" CommonJS 规范")]),t._v(" "),s("p",[t._v("当时 ECMAScript 规范由于时间早，涵盖的范围比较小。存在一些缺陷：")]),t._v(" "),s("ul",[s("li",[t._v("没有模块系统")]),t._v(" "),s("li",[t._v("标准库较少：对于文件系统，I/O 流等常见需求没有标准的 API")]),t._v(" "),s("li",[t._v("没有标准接口：比如 Web 服务器或者数据库之类的标准统一接口")]),t._v(" "),s("li",[t._v("缺乏包管理系统\nCommonJS 的提出，主要是为了弥补当时 JavaScript 没有标准的缺陷，期望让 JavaScript 具备开发大型应用的能力"),s("br"),t._v("\n规范涵盖了模块、二进制、Buffer、字符集编码、I/O 流、进程环境、文件系统、套接字、单元测试、Web 服务器网关接口、包管理等。")])]),t._v(" "),s("p",[t._v("CommonJS 对于模块的定义主要分为三部分：")]),t._v(" "),s("ul",[s("li",[t._v("模块引用（require）：用 "),s("code",[t._v("require()")]),t._v(" 引入外部模块到当前上下文中")]),t._v(" "),s("li",[t._v("模块定义（exports）："),s("br"),t._v("\n上下文提供了"),s("code",[t._v("exports")]),t._v(" 对象用于导出当前模块的变量或方法，并且是唯一的导出出口"),s("br"),t._v("\n还有一个"),s("code",[t._v("module")]),t._v(" 对象，代表模块本身，exports 是 module 的属性")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// method.js")]),t._v("\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do sth.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./method"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// method.add()")]),t._v("\n")])])]),s("ul",[s("li",[t._v("模块标识（module）：传递给 "),s("code",[t._v("require")]),t._v(" 的参数，比如路径、字符串")])]),t._v(" "),s("h2",{attrs:{id:"nodejs-的模块实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-的模块实现"}},[t._v("#")]),t._v(" NodeJS 的模块实现")]),t._v(" "),s("p",[t._v("NodeJS 对 CommonJS 的模块规范进行了一定的取舍。"),s("br"),t._v("\n引入模块经历 3 个步骤：")]),t._v(" "),s("ol",[s("li",[t._v("路径分析")]),t._v(" "),s("li",[t._v("文件定位")]),t._v(" "),s("li",[t._v("编译执行")])]),t._v(" "),s("p",[t._v("在 NodeJS 中，模块分为两类")]),t._v(" "),s("ul",[s("li",[t._v("核心模块：NodeJS 本身提供的模块。"),s("br"),t._v("\n核心模块部分在 NodeJS 进程启动时就被直接加载进内存，会略过文件定位和编辑执行两个步骤，加载速度是最快的")]),t._v(" "),s("li",[t._v("文件模块：运行时动态加载，需要进行完整的 3 个步骤，比核心模块慢")])]),t._v(" "),s("h2",{attrs:{id:"优先从缓存加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先从缓存加载"}},[t._v("#")]),t._v(" 优先从缓存加载")]),t._v(" "),s("p",[t._v("类似浏览器缓存静态资源，NodeJS 也会进行缓存，缓存的是编译和执行之后的对象"),s("br"),t._v("\n不论是核心模块还是文件模块，require() 对相同模块的二次加载都优先从缓存中拿")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// method.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("changeName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  myName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nexports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./method"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sameMethod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./method"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\nsameMethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "world"')]),t._v("\n")])])]),s("h3",{attrs:{id:"路径分析和文件定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径分析和文件定位"}},[t._v("#")]),t._v(" 路径分析和文件定位")]),t._v(" "),s("p",[t._v("模块标识符主要分为以下几类")]),t._v(" "),s("ul",[s("li",[t._v("核心模块，如 fs、http、path 等。\n如果自定义的模块和核心模块重名，是不会被加载的，因为核心模块加速速度总是弊文件模块快")]),t._v(" "),s("li",[t._v('"." 或者 ".." 开头的相对路径')]),t._v(" "),s("li",[t._v('"/" 或盘符（'),s("code",[t._v("C:")]),t._v("）开始的绝对路径")]),t._v(" "),s("li",[t._v("非路径形式的文件模块：比如一个包（package）")])]),t._v(" "),s("h3",{attrs:{id:"模块路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块路径"}},[t._v("#")]),t._v(" 模块路径")]),t._v(" "),s("p",[t._v("生成规则，有点像作用域链")]),t._v(" "),s("ul",[s("li",[t._v("当前文件目录的 node_modules")]),t._v(" "),s("li",[t._v("父级的 node_modules")]),t._v(" "),s("li",[t._v("父级的父级的 node_modules")]),t._v(" "),s("li",[t._v("往上递归，一直到根目录下的 node_modules")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("paths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("windows 下可能是这样")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[\n  'D:\\\\project\\\\typescript\\\\src\\\\node_modules',\n  'D:\\\\project\\\\typescript\\\\node_modules',\n  'D:\\\\project\\\\node_modules',\n  'D:\\\\node_modules'\n]\n")])])]),s("h3",{attrs:{id:"文件定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件定位"}},[t._v("#")]),t._v(" 文件定位")]),t._v(" "),s("p",[t._v("缓存加载的策略使得二次引入时不需要引入模块的 3 个步骤，但在文件的定位过程中需要注意一些细节：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("扩展名：require() 支持不包含文件扩展名，NodeJS 会根据 "),s("code",[t._v("xx.js → xx.json → xx.node")]),t._v(" 依次查找"),s("br"),t._v("\n查找的过程中会调用"),s("code",[t._v("fs")]),t._v(" 模块同步阻塞地判断文件是否存在")])]),t._v(" "),s("li",[s("p",[t._v("目录分析和包：如果没有查找到文件，而是一个目录，NodeJS 会把目录当做一个包来处理")]),t._v(" "),s("ul",[s("li",[t._v("先在当前目录下找 package.json（CommonJS 包规范定义的包描述文件），通过 JSON.parse() 解析对象，取出 "),s("code",[t._v("main")]),t._v(" 属性指定的文件名进行文件定位")]),t._v(" "),s("li",[t._v("如果 "),s("code",[t._v("main")]),t._v(" 指定的文件名错误，或者没有 package.json，将 "),s("code",[t._v("index")]),t._v(" 作为默认文件名，依次查找 "),s("code",[t._v("index.js")]),t._v("，"),s("code",[t._v("index.json")]),t._v("，"),s("code",[t._v("index.node")])]),t._v(" "),s("li",[t._v("如果都没能定位任何文件，那么往上找 "),s("code",[t._v("module.paths")]),t._v(" 的路径数组，直至遍历完毕")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// D:\\project\\typescript\\src\\index.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method2.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("会往上找 'D:\\project\\typescript\\node_modules\\method2.js'，'D:\\project\\node_modules\\method2.js'，'D:\\node_modules\\method2.js'")]),t._v(" "),s("ul",[s("li",[t._v("依然没找到，抛出查找失败")])]),t._v(" "),s("h2",{attrs:{id:"文件模块编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件模块编译"}},[t._v("#")]),t._v(" 文件模块编译")]),t._v(" "),s("p",[t._v("定位到具体文件后，NodeJS 会新建一个模块对象，然后根据路径载入编译"),s("br"),t._v("\n不同的文件扩展名，载入方式不同")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("*.js")]),t._v("：fs 模块同步读取文件后编译执行")]),t._v(" "),s("li",[s("code",[t._v("*.node")]),t._v("：C/C++ 编写的扩展文件，通过 dlopen() 方法加载最后编译生成的文件")]),t._v(" "),s("li",[s("code",[t._v("*.json")]),t._v("：fs 模块同步读取后再用 JSON.parse() 解析返回后的结果")]),t._v(" "),s("li",[t._v("其他：当做 "),s("code",[t._v("*.js")]),t._v(" 处理")])]),t._v(" "),s("h3",{attrs:{id:"javascript-模块的编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-模块的编译"}},[t._v("#")]),t._v(" JavaScript 模块的编译")]),t._v(" "),s("p",[t._v("在编译的过程中，NodeJS 对 JavaScript 进行了一些包装（），大致结构如下"),s("br"),t._v("\n这样可以进行作用域隔离，避免全局变量污染")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __dirname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 源代码内容")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比如 console.log(module.paths)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("而 exports、"),s("RouterLink",{attrs:{to:"/nodejs/008_path.html"}},[t._v("__dirname")]),t._v(" 这些全局变量的由来也是因为包装而不需要定义就能使用")],1),t._v(" "),s("h3",{attrs:{id:"exports-和-module-exports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exports-和-module-exports"}},[t._v("#")]),t._v(" exports 和 module.exports")]),t._v(" "),s("p",[t._v("require() 返回的是 module.exports 而不是 exports")]),t._v(" "),s("ul",[s("li",[t._v("module.exports 初始值为一个空对象 {}")]),t._v(" "),s("li",[t._v("exports 是指向的 module.exports 的引用\n"),s("ul",[s("li",[t._v("exports.hello=hello 时，在 require 之后，需要 xxx.hello 来调用。")]),t._v(" "),s("li",[t._v("设置 module.exports = hello，可以直接使用")])])])]),t._v(" "),s("p",[t._v("内部声明了一个名为 exports 变量：var exports = module.exports;"),s("br"),t._v("\n但最后暴露出去的是 module.exports 对象；所以可以通过 exports.XXX 来修改 module.exports.XXX，但是不能通过 exports\n= {}修改")]),t._v(" "),s("h3",{attrs:{id:"c-c-模块的编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-c-模块的编译"}},[t._v("#")]),t._v(" C/C++模块的编译")]),t._v(" "),s("p",[t._v("调用 process.dlopen() 方法进行加载和执行，dlopen() 在 Windows 和 _nix 平台下有不同的实现，通过 libuv 兼容层进行封装"),s("br"),t._v(" "),s("code",[t._v("_.node")]),t._v(" 实际上并不需要编译，它是编写 C/C++ 模块之后编译生成的。"),s("br"),t._v("\n执行的过程中，模块的 exports 对象和 .node 模块产生联系，然后返回给调用者")]),t._v(" "),s("h3",{attrs:{id:"json-文件的编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-文件的编译"}},[t._v("#")]),t._v(" JSON 文件的编译")]),t._v(" "),s("p",[t._v("读取 JSON 文件，直接引入即可，不需要显示地调用 fs 模块")]),t._v(" "),s("h2",{attrs:{id:"核心模块编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心模块编译"}},[t._v("#")]),t._v(" 核心模块编译")]),t._v(" "),s("p",[t._v("核心模块在编译成可执行文件的过程中被编译进了二进制文件。"),s("br"),t._v("\n核心模块实际上分为两部分")]),t._v(" "),s("ul",[s("li",[t._v("JavaScript 编写：放在 lib 文件夹下")]),t._v(" "),s("li",[t._v("C/C++ 编写：放在 src 文件夹下")])]),t._v(" "),s("h3",{attrs:{id:"javascript-核心模块的编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-核心模块的编译"}},[t._v("#")]),t._v(" JavaScript 核心模块的编译")]),t._v(" "),s("p",[t._v("NodeJS 用 V8 附带的 js2c.py 工具把内置的 JavaScript 代码转换成 C++ 里的数组，生成 node_natives.h 头文件"),s("br"),t._v("\n在这个过程中，JavaScript 以字符串的形式存储在 NodeJS 命名空间中。"),s("br"),t._v("\n启动 NodeJS 进程时，JavaSciprt 代码直接加载进内存。")]),t._v(" "),s("p",[t._v("lib 目录下的的模块文件也没有定义 require、module、exports 这些变量。在引入 JavaScript 核心模块的过程中，也经历了和文件模块一样的包装过程")]),t._v(" "),s("h3",{attrs:{id:"c-c-核心模块的编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-c-核心模块的编译"}},[t._v("#")]),t._v(" C/C++ 核心模块的编译")]),t._v(" "),s("p",[t._v("核心模块中，有些是完全用 C/C++ 编写，有些是 C/C++ 编写核心，其他部分由 JavaScript 包装以满足性能要求。"),s("br"),t._v("\n因为脚本语言的开发速度由于静态语言，虽然性能会弱于静态语言"),s("br"),t._v("\n纯 C/C++ 编写的称为内建模块：比如 buffer、crypto")]),t._v(" "),s("h3",{attrs:{id:"gyp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gyp"}},[t._v("#")]),t._v(" gyp")]),t._v(" "),s("p",[t._v("Generate Your Projects：跨平台地生成文件。比如 *nix 下生成的是 Makefile 等文件，Windows 下是 vcxproj 等"),s("br"),t._v("\n再在各自的平台用各自的编译器进行编译"),s("br"),t._v("\n开发者专门为 Node 提供了一个专有的扩展构建工具——node-gyp")])])}),[],!1,null,null,null);s.default=n.exports}}]);